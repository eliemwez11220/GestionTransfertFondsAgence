<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Agence extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Agence_model');
    } 

    /*
     * Listing of tb_am_agences
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('tb_am_agence/index?');
        $config['total_rows'] = $this->Agence_model->get_all_tb_am_agences_count();
        $this->pagination->initialize($config);

        $data['tb_am_agences'] = $this->Agence_model->get_all_tb_am_agences($params);
        
        $data['_view'] = 'agence/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tb_am_agence
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('agence_nom','Agence Nom','required|alpha');
		$this->form_validation->set_rules('agence_adresse','Agence Adresse','required|max_length[250]');
		//$this->form_validation->set_rules('agence_code','Agence Code','required|is_unique[tb_am_agences.code_agence]|max_length[10]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'agence_nom' => $this->input->post('agence_nom'),
				'agence_responsable' => $this->input->post('agence_responsable'),
				'agence_code' => $this->input->post('agence_code'),
				'agence_adresse' => $this->input->post('agence_adresse'),
            );
            
            $tb_am_agence_id = $this->Agence_model->add_tb_am_agence($params);
            redirect('agence/index');
        }
        else
        {            
            $data['_view'] = 'agence/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tb_am_agence
     */
    function edit($agence_id)
    {   
        // check if the tb_am_agence exists before trying to edit it
        $data['tb_am_agence'] = $this->Agence_model->get_tb_am_agence($agence_id);
        
        if(isset($data['tb_am_agence']['agence_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('agence_nom','Agence Nom','required|alpha');
			$this->form_validation->set_rules('agence_adresse','Agence Adresse','required|max_length[250]');
			$this->form_validation->set_rules('agence_code','Agence Code','required|max_length[10]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'agence_nom' => $this->input->post('agence_nom'),
					'agence_responsable' => $this->input->post('agence_responsable'),
					'agence_code' => $this->input->post('agence_code'),
					'agence_adresse' => $this->input->post('agence_adresse'),
                );

                $this->Agence_model->update_tb_am_agence($agence_id,$params);            
                redirect('agence/index');
            }
            else
            {
                $data['_view'] = 'agence/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tb_am_agence you are trying to edit does not exist.');
    } 

    /*
     * Deleting tb_am_agence
     */
    function remove($agence_id)
    {
        $tb_am_agence = $this->Agence_model->get_tb_am_agence($agence_id);

        // check if the tb_am_agence exists before trying to delete it
        if(isset($tb_am_agence['agence_id']))
        {
            $this->Agence_model->delete_tb_am_agence($agence_id);
            redirect('agence/index');
        }
        else
            show_error('The tb_am_agence you are trying to delete does not exist.');
    }
    
}
