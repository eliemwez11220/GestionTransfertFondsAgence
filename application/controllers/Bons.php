<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Bons extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Bons_model');
    } 

    /*
     * Listing of tb_am_bons
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('tb_am_bon/index?');
        $config['total_rows'] = $this->Bons_model->get_all_tb_am_bons_count();
        $this->pagination->initialize($config);

        $data['tb_am_bons'] = $this->Bons_model->get_all_tb_am_bons($params);
        
        $data['_view'] = 'bons/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tb_am_bon
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'code_sid' => $this->input->post('code_sid'),
				'bon_type' => $this->input->post('bon_type'),
				'bon_created' => date('Y-m-d H:i:s'),
				'bon_comments' => $this->input->post('bon_comments'),
            );
            
            $tb_am_bon_id = $this->Bons_model->add_tb_am_bon($params);
            redirect('bons/index');
        }
        else
        {
			$this->load->model('Transaction_model');
			$data['all_tb_am_transactions'] = $this->Transaction_model->get_all_tb_am_transactions();
            
            $data['_view'] = 'bons/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tb_am_bon
     */
    function edit($bon_id)
    {   
        // check if the tb_am_bon exists before trying to edit it
        $data['tb_am_bon'] = $this->Bons_model->get_tb_am_bon($bon_id);
        
        if(isset($data['tb_am_bon']['bon_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'code_sid' => $this->input->post('code_sid'),
					'bon_type' => $this->input->post('bon_type'),
					'bon_created' => $this->input->post('bon_created'),
					'bon_comments' => $this->input->post('bon_comments'),
                );

                $this->Bons_model->update_tb_am_bon($bon_id,$params);            
                redirect('bons/index');
            }
            else
            {
				$this->load->model('Transaction_model');
				$data['all_tb_am_transactions'] = $this->Transaction_model->get_all_tb_am_transactions();

                $data['_view'] = 'bons/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tb_am_bon you are trying to edit does not exist.');
    } 

    /*
     * Deleting tb_am_bon
     */
    function remove($bon_id)
    {
        $tb_am_bon = $this->Bons_model->get_tb_am_bon($bon_id);

        // check if the tb_am_bon exists before trying to delete it
        if(isset($tb_am_bon['bon_id']))
        {
            $this->Bons_model->delete_tb_am_bon($bon_id);
            redirect('bons/index');
        }
        else
            show_error('The tb_am_bon you are trying to delete does not exist.');
    }
    
}
